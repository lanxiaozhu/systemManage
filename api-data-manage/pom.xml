<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging><!--打包方式改成pom-->

    <!-- 项目说明：这里作为聚合工程的父工程 -->
    <groupId>com.moyu.api-data-manage</groupId>
    <artifactId>api-data-manage</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- 继承说明：这里继承SpringBoot提供的父工程 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/>
    </parent>
    <!-- 模块说明：这里声明多个子模块 -->
    <modules>
        <module>api-web</module>
        <module>api-biz</module>
        <module>api-common</module>
        <module>api-tools</module>
    </modules>

    <!--依赖版本-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring.shiro>1.4.0</spring.shiro>
        <fastJson>1.2.51</fastJson>
        <mybatis.version>3.4.0</mybatis.version>
        <mybatis.spring.version>1.3.0</mybatis.spring.version>
        <mybatis-generator.version>1.3.5</mybatis-generator.version>
        <commons.version>2.6</commons.version>
        <pagehelper.version>5.1.2</pagehelper.version>
        <pagehelper-springboot.version>1.2.5</pagehelper-springboot.version>
        <okhttp.version>3.7.0</okhttp.version>
        <webCollector.version>2.52</webCollector.version>
    </properties>
    <!-- 引入父级项目 自动可以使用下面的包   这里对应下面的 dependencyManagement是对等的区别，相反是 大家可以通过引入parent 父工程可以一起使用-->
    <dependencies>
        <!--RestController依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--内嵌tomcat：设置为provided是在打包时会将该包(依赖)排除，因为要放到独立的tomcat中运行，Spring Boot内嵌的Tomcat是不需要用到的。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--使用自带的依赖 mybatis &&mysql-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <!--  <scope>runtime</scope>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--dependencyManagement  统一管理maven包版本，但是子工程并不会自动引入包！还需要将dependency  && groupId && artifactId 再次引入-->
    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastJson}</version>
            </dependency>

            <!--添加shrio依赖-->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${spring.shiro}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.16.22</version>
            </dependency>

            <!--代码生产-->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis-generator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator.version}</version>
            </dependency>
            <!-- StringUtils  -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <!--分页插件 begin-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-autoconfigure</artifactId>
                <version>${pagehelper-springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-springboot.version}</version>
            </dependency>
            <!--分页插件 end-->
            <!-- HTTP 客户端-->
            <!--<dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>-->

            <!--爬虫解析器-->
            <dependency>
                <groupId>cn.edu.hfut.dmic.webcollector</groupId>
                <artifactId>WebCollector</artifactId>
                <version>${webCollector.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


</project>